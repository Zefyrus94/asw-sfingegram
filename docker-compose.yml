version: '3'

services:
  postgres-enigmi:
    image: "postgres"
    restart: always
    env_file:
      - init_db_sfingegram_enigmi.env
    volumes:
      - ./data/database-enigmi:/var/lib/postgresql/data
    ports:
      - 5432
  postgres-connessioni:
    image: "postgres"
    env_file:
      - init_db_sfingegram_connessioni.env
    volumes:
      - ./data/database-connessioni:/var/lib/postgresql/data
    ports:
      - 5432
  postgres-enigmiseguiti:
    image: "postgres"
    env_file:
      - init_db_sfingegram_enigmiseguiti.env
    volumes:
      - ./data/database-enigmiseguiti:/var/lib/postgresql/data
    ports:
      - 5432
  consul:
    container_name: "asw-consul"
    image: consul
    hostname: consul
    ports:
      - 8500
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    container_name: "kafka"
    image: wurstmeister/kafka:latest
    depends_on:
      - "zookeeper"
    ports:
      - 9092
    environment:
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "enigmi:4:1,connessioni:4:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  enigmi:
    build: ./enigmi
    image: enigmi-service
    restart: always
    depends_on:
      - consul 
      - postgres-enigmi
  connessioni:
    build: ./connessioni
    image: connessioni-service
    restart: always
    depends_on:
      - consul  
      - postgres-connessioni
  enigmi-seguiti:
    build: ./enigmi-seguiti
    image: enigmi-seguiti-service
    restart: always
    depends_on:
      - consul  
      - postgres-enigmiseguiti
  apigateway:
    build: ./api-gateway
    image: api-gateway-service
    ports:
    - "8080:8080"
    depends_on:
      - consul