version: '3'
networks:
  net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24
volumes:
  database-enigmi:
    # external:
    #   name: database-enigmi
  database-connessioni:
  database-enigmiseguiti: # named volumes can be managed easier using docker-compose
services:
  postgres-enigmi:
    image: "postgres" # use latest official postgres version
    restart: always
    env_file:
      - init_db_sfingegram_enigmi.env # configure postgres
    volumes:
      - database-enigmi:/var/lib/postgresql/data/ # persist data even if container shuts down
#      - ./db:/docker-entrypoint-initdb.d/
    networks:
      - net
    ports:
      - "5432"
  database_2:
    container_name: "postgres-connessioni"
    image: "postgres" # use latest official postgres version
    env_file:
      - init_db_sfingegram_connessioni.env # configure postgres
    volumes:
      #docker volume inspect database-data
      - database-connessioni:/var/lib/postgresql/data/ # persist data even if container shuts down
#      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - 5433:5432
    networks:
      - net
  
  database_3:
    container_name: "postgres-enigmiseguiti"
    image: "postgres" # use latest official postgres version
    env_file:
      - init_db_sfingegram_enigmiseguiti.env # configure postgres
    volumes:
      #docker volume inspect database-data
      - database-enigmiseguiti:/var/lib/postgresql/data/ # persist data even if container shuts down
#      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - 5434:5432
    networks:
      - net
#  consul:
#    container_name: "asw-consul"
#    image: consul
#    hostname: consul
#    ports:
#      - "8500:8500"
#    networks:
#      - net
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - net
  kafka:
    #Couldn't resolve server kafka:9092 from bootstrap.servers as DNS resolution failed for kafka
    container_name: "kafka"
    image: wurstmeister/kafka:latest
    depends_on:
      - "zookeeper"
    ports:
      - "9092:9092"
#      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "enigma-service-event-channel:1:1,connessione-con-autore-service-event-channel:1:1,connessione-con-tipo-service-event-channel:1:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_CREATE_TOPICS: "consumer-service-channel:1:1,restaurant-service-channel:1:1,order-service-channel:1:1"
#      # HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
#      # HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      # KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
#      # PORT_COMMAND: "docker port $$(hostname) 9092/tcp | cut -d: -f2
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://10.11.1.188:9094
#      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER: DEBUG
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - net
  enigmi:
    build: ./enigmi
    image: sfingegram/enigmi-service-v2
#    depends_on:
#      - consul
    networks:
      - net
  connessioni:
    build: ./connessioni
    image: sfingegram/connessioni-service
#    depends_on:
#      - consul
    networks:
      - net
  enigmi-seguiti:
    build: ./enigmi-seguiti
    image: sfingegram/enigmi-seguiti-service
#    depends_on:
#      - consul
    networks:
      - net
  apigateway:
    build: ./api-gateway
    image: sfingegram/api-gateway-service
    ports:
    - "8080:8080"
#    depends_on:
#      - consul
    networks:
      - net